#!/bin/sh
# postinst script for debathena-gdm-config
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


package=debathena-gdm-config
ours=.debathena
theirs=.debathena-orig

undivert_unlink_symlink()
{
    file="$1"
    ourfile="$2"
    theirfile="$3"
    if [ ! -L "$file" ] || \
        [ "$(readlink "$file")" != "$(basename "$ourfile")" -a \
          "$(readlink "$file")" != "$(basename "$theirfile")" ]; then
        echo "*** OMINOUS WARNING ***: $file is not linked to either $(basename "$ourfile") or $(basename "$theirfile")" >&2
    else
        rm -f "$file"
    fi
}

undivert_unlink_divert()
{
    file="$1"
    if [ ! -L "$file" ] && [ ! -e "$file" ]; then
        dpkg-divert --remove --rename --package "$package" "$file"
    else
        echo "Not removing diversion of $file by $package" >&2
    fi
}

undivert_unlink()
{
    prefix=$1
    suffix=$2

    file=$prefix$suffix
    ourfile=$prefix$ours$suffix
    theirfile=$prefix$theirs$suffix

    undivert_unlink_symlink "$file" "$ourfile" "$theirfile"
    undivert_unlink_divert "$file" "$package"
}

cleanup_old_diversion() {
    file="$1"
    if dpkg-divert --list "${file}" | grep -Fxq "diversion of ${file} to ${file}${theirs} by ${package}"; then
        undivert_unlink "$file"
    fi
}

case "$1" in
    configure)
	if dpkg --compare-versions "$2" lt-nl '1.26~'; then
	    touch /var/run/reboot-required
	fi
	gdm_version="$(dpkg-query -W -f '${Version}' gdm)"
	if dpkg --compare-versions "$gdm_version" ge '2.25.2~'; then
	    cleanup_old_diversion /etc/gdm/gdm.conf
	    cleanup_old_diversion /etc/gdm/gdm.conf-custom
	    cleanup_old_diversion /usr/share/gdm/BuiltInSessions/default.desktop
	    cleanup_old_diversion /usr/share/images/xsplash/bg_2560x1600.debathena.jpg
	    cleanup_old_diversion /usr/share/images/xsplash/throbber_small.debathena.png
	    cleanup_old_diversion /usr/share/images/xsplash/throbber_medium.debathena.png
	    cleanup_old_diversion /usr/share/images/xsplash/throbber_large.debathena.png
	    cleanup_old_diversion /usr/share/images/xsplash/throbber_xtra_large.debathena.png
	fi

	if [ -f /usr/share/xsessions/athena.desktop ] && \
	   [ -x /usr/lib/gdm/gdm-set-default-session ]; then
	  # Sigh.  This exits non-zero if there already is a default 
	  # session, but only if DBus is running.
	  /usr/lib/gdm/gdm-set-default-session -k athena || true
	fi

        if test -f /var/run/gdm.pid ; then
	    if hash invoke-rc.d 2>/dev/null; then
	        invoke-rc.d gdm reload || true
        	else
		/etc/init.d/gdm reload || true
	    fi
        fi
	# We don't actually want the "unknown metapackage" file, but it
	# needs to be present in case you have debathena-gdm-config and
	# nothing else, so give it priority 0.
        update-alternatives --install \
            /usr/share/gdm/themes/debathena/metapackage.svg \
            debathena-metapackage.svg \
            /usr/share/gdm/themes/debathena/metapackage-unknown.svg \
            0
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


